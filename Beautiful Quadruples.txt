#!/bin/python3

import sys
import bisect

A,B,C,D = input().strip().split(' ')
A,B,C,D = sorted([int(A),int(B),int(C),int(D)])



N_A   = A
kA    = A*(A+1)/2 - A**2
N_AB  = B*A + kA
kAB   = int((B*(B+1)/2 - A*(A+1)/2)*A + (B-A)*kA + A*(A+1)*(A+2)/6)
N_ABC = int((C-B)*N_AB + kAB)
k1 = (C*(C+1)/2 - B*(B+1)/2)*N_AB
k2 = A*(B*(B+1)*(B+2)/6 - A*(A+1)*(A+2)/6)
k3 = kA * (B*(B+1)/2-A*(A+1)/2)
N_ABCD = int((D-C)*N_ABC + k1 + (C-B)*(kAB - B*N_AB) + k2 + k3 + (B-A)*(-A*(A**2-1)/3 -A*kA) + A*(A+1)*(A+2)*(A+3)/24)

N_AC = int(C*A + kA)

DictAB = {}
CountHetero = 0
for i0 in range(1,B+1):
    for i1 in range(1,min([i0+1,A+1])):
        n1XORn2 = i0 ^ i1
        if n1XORn2 != 0:
            if n1XORn2 not in DictAB:
                DictAB[n1XORn2] = [i0]
            else:
                DictAB[n1XORn2].append(i0)
for keys in DictAB:
    DictAB[keys].sort()
for i0 in range(1,D+1):
    for i1 in range(1,min([i0+1,C+1])):
        n3XORn4 = i0^i1
        if n3XORn4 != 0 and n3XORn4 in DictAB:
            CountHetero += bisect.bisect_left(DictAB[n3XORn4],i1)

print(N_ABCD-N_AC-CountHetero)
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
class Solution {

    static int matrixLand(int[][] A) {
		var h = A.Length;
		var w = A[0].Length;
		var ss = new int[w];
		var rr = new int[w];
		var uu = new int[w];
		var vv = new int[w];
		var pp = new int[w];
		var aa = new int[w];
		var bb = new int[w];
		for (var i = 0; i < h; ++i)
		{
			var cc = A[i];
			for (int j = 0, m = 0; j < w; ++j)
			{
				ss[j] = cc[j] + (j == 0 ? 0 : ss[j - 1]);
				uu[j] = pp[j] - m;
				if (j > 0 && uu[j] < uu[j - 1])
					uu[j] = uu[j - 1];
				if (m > ss[j])
					m = ss[j];
			}
			for (int j = w - 1, m = 0; j >= 0; --j)
			{
				rr[j] = cc[j] + (j == w - 1 ? 0 : rr[j + 1]);
				vv[j] = pp[j] - m;
				if (j < w - 1 && vv[j] < vv[j + 1])
					vv[j] = vv[j + 1];
				if (m > rr[j])
					m = rr[j];
			}
			for (int j = w - 1, m = ss[j]; j >= 0; --j)
			{
				if (m < ss[j])
					m = ss[j];
				aa[j] = m + uu[j];
			}
			for (int j = 0, m = rr[j]; j < w; ++j)
			{
				if (m < rr[j])
					m = rr[j];
				bb[j] = m + vv[j];
			}
			for (var j = 0; j < w; ++j)
				pp[j] = Math.Max(aa[j], bb[j]);
		}
		var s = pp[0];
		for (var j = 1; j < w; ++j)
			if (s < pp[j])
				s = pp[j];
		return s;
    }

    static void Main(String[] args) {
        string[] tokens_n = Console.ReadLine().Split(' ');
        int n = Convert.ToInt32(tokens_n[0]);
        int m = Convert.ToInt32(tokens_n[1]);
        int[][] A = new int[n][];
        for(int A_i = 0; A_i < n; A_i++){
           string[] A_temp = Console.ReadLine().Split(' ');
           A[A_i] = Array.ConvertAll(A_temp,Int32.Parse);
        }
        int result = matrixLand(A);
        Console.WriteLine(result);
    }
}